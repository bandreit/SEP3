@page "/Services"
@using Client.Shared.Components
@using Client.Data
@using Client.Models
@using Microsoft.AspNetCore.Mvc.Formatters
@using Syncfusion.Blazor.Inputs
@inject NavigationManager NavigationManager
@inject IServiceService ServiceService

<style>
    .services-layout {
        display:  grid;
        grid-template-columns: repeat(4, 1fr);
        column-gap: 1rem;
        row-gap: 1rem;
        height: 100vh;
    }
    .search-bar {
    margin-left: 1.06rem;   
    display: flex;
    justify-content: center;
    }
    
    .sf-input {
       width: 400px !important;
    }
</style>

<div class="search-bar">
    <SfTextBox @bind-Value="filterByTitle" Placeholder="Search by title" CssClass="e-bigger sf-input" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
</div>

<div class="services-layout">
    @if (_services == null)
    {
        <p>
            <em>Loading...</em>
        </p>
    }
    else
    {
        foreach (var service in _servicesToShow)
        {
            <ServiceCard Title="@service.title" Content="@service.description" OnClick="@(() => OnClick(@service.id))"/>
        }
    }
</div>


@code {
    private IList<Service> _services { get; set; }

    private string filterByTitle { get; set; } = "";

    protected override async Task OnInitializedAsync()
    {
        _services = await ServiceService.GetAllServices();
    }

    List<Service> _servicesToShow => _services.Where(t => t.title.ToLower().Contains(filterByTitle.ToLower())).ToList();
    

    public void OnClick(String ServiceId)
    {
        NavigationManager.NavigateTo($"/BookService?ServiceId={ServiceId}");
    }

}